{"version":3,"sources":["redux/actions.js","components/TodoItem.jsx","components/TodoList.jsx","components/TodoInput.jsx","App.js","reportWebVitals.js","redux/states.js","redux/store.js","redux/reducer.js","index.js"],"names":["ADD_TODO","DELETE_TODO","UPDATE_TODO","useStyles","makeStyles","root","background","border","borderRadius","boxShadow","color","height","padding","edits","TodoItem","todo","useState","editable","setEditable","name","setName","value","setValue","classes","dispatch","useDispatch","className","type","onChange","e","target","style","id","slice","IconButton","variant","aria-label","onClick","console","log","payload","updateTodo","todoId","TodoList","props","todos","useSelector","state","map","TodoInput","margin","display","justifyContent","TextField","label","size","fontSize","Button","uuid","App","cards","setCards","Typography","component","fontWeight","float","gutterBottom","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","newTodos","action","push","filter","index","i","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de94e520.chunk.js","sourcesContent":["export const ADD_TODO    = \"ADD_TODO\";\r\nexport const DELETE_TODO = \"DELETE_TODO\";\r\nexport const UPDATE_TODO = \"UPDATE_TODO\";\r\n\r\n\r\n\r\nexport function addTodo(todo){\r\n    return{\r\n        type:ADD_TODO,\r\n        payload: todo,\r\n    }\r\n}\r\n\r\nexport function deleteTodo(todoId){\r\n    return{\r\n        type:DELETE_TODO,\r\n        payload: todoId,\r\n    }\r\n}\r\n\r\nexport function updateTodo(todo){\r\n    return{\r\n        type:UPDATE_TODO,\r\n        payload: todo,\r\n    }\r\n}","import React, { useState,Fragment } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteTodo, updateTodo } from '../redux/actions';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CancelPresentationIcon from '@material-ui/icons/CancelPresentation';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      background: '#90a4ae',\r\n      border: 0,\r\n      borderRadius: 3,\r\n      boxShadow: '0 3px 5px 2px #eceff1',\r\n      color: 'white',\r\n      height: 'auto',\r\n      padding: '0 30px',\r\n    },\r\n    edits: {\r\n        color: 'white'\r\n      },\r\n  });\r\n\r\nfunction TodoItem({todo}) {\r\n    const [editable, setEditable] = useState(false);\r\n    const [name, setName] = useState(todo.name);\r\n    const [value, setValue] = useState(todo.value);\r\n    const classes = useStyles();\r\n    let dispatch = useDispatch();\r\n    return (\r\n        <div>   \r\n            <div className=\"row align-items-center\">\r\n            <Fragment>\r\n                <div className=\"col mb-3\">\r\n                <div className={classes.root} >  \r\n                <div className=\"tile is-child box\">\r\n                <div className=\"row\">\r\n                <div>     \r\n                { editable ? \r\n                <input \r\n                type='text' \r\n                className='form-control' \r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)} /> :  <h4>{todo.name}</h4> } \r\n                { editable ? \r\n                <input \r\n                type='text' \r\n                className='form-control' \r\n                value={value}\r\n                onChange={(e) => setValue(e.target.value)} /> :  <h4>{todo.value}</h4>  }\r\n                </div>\r\n                <h5 style={{padding:\"5px 20px\"}}>ID : {todo.id.slice(0,8)}</h5>        \r\n                </div> \r\n                </div>\r\n\r\n                <IconButton \r\n               variant=\"outlined\"\r\n               color=\"dark\"\r\n               aria-label=\"add an alarm\"\r\n               onClick={() => {\r\n                console.log(\"update\");\r\n                dispatch(updateTodo(\r\n                    {\r\n                        ...todo,\r\n                        name:name,\r\n                        value:value\r\n                    }\r\n                ))\r\n                if(editable){\r\n                    setName(todo.name);\r\n                    setValue(todo.value);\r\n                }\r\n                 setEditable(!editable); \r\n                 \r\n               }}\r\n               className=\"m-2\" >\r\n               {editable ? <SaveIcon className={classes.edits}/> : <EditIcon onClick={()=>setName(\" \") || setValue(\" \") } className={classes.edits} /> }\r\n               </IconButton>\r\n\r\n               <IconButton \r\n               variant=\"outlined\"\r\n               color=\"dark\"\r\n               aria-label=\"add an alarm\"\r\n               onClick={() => dispatch(deleteTodo(todo.id))}\r\n               className=\"m-2\" >\r\n               <CancelPresentationIcon className={classes.edits} />\r\n               </IconButton>               \r\n            </div>\r\n            </div>\r\n            </Fragment>\r\n            </div>\r\n        </div>     \r\n    \r\n    );\r\n}\r\n\r\nexport default TodoItem;","import React, { useState  } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport TodoItem from './TodoItem';\r\n\r\n\r\nfunction TodoList(props) {\r\n    let todos = useSelector(state => state)\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"my-5\">\r\n            { todos.map(todo => {\r\n                return <TodoItem key={todo.id} todo={todo}/>\r\n            })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoList;","import React, { useState, Fragment } from 'react';\r\nimport { addTodo } from \"../redux/actions\";\r\nimport {v1 as uuid } from 'uuid';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      background: '#212121',\r\n      border: 0,\r\n      borderRadius: 3,\r\n      color: 'white',\r\n      height: 48,\r\n      padding: '0 30px',\r\n    },\r\n  });\r\n\r\nfunction TodoInput(props) {\r\n    let [name, setName] = useState();\r\n    let [value, setValue] = useState();\r\n    let dispatch = useDispatch();\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Fragment>\r\n        <section className=\"section\"> \r\n        <div className=\"container\" style={{margin:\"70px 10px\"}}> \r\n           <div  style={{display:\"flex\",justifyContent: \"space-between\",padding:\"10px\"}}>\r\n               <TextField \r\n               label=\"Name\"\r\n               variant=\"outlined\"\r\n               size=\"small\" \r\n               onChange={(e) => setName(e.target.value)}\r\n               value={name} \r\n               className=\"form-control mr-2\"\r\n               />\r\n               <TextField \r\n               label=\"Value\"\r\n               variant=\"outlined\"\r\n               size=\"small\" \r\n               onChange={(e) => setValue(e.target.value)}\r\n               value={value}\r\n               className=\"form-control mr-2\"\r\n               />\r\n               <IconButton \r\n               variant=\"outlined\"\r\n               color=\"secondary\"\r\n               size=\"small\"  \r\n               aria-label=\"add an alarm\"\r\n               onClick={()=>setName(\" \") || setValue(\" \") } >\r\n               <CancelIcon fontSize=\"large\" />\r\n               </IconButton>             \r\n            </div>\r\n            <div style={{display:\"flex\",justifyContent: \"flex-end\",padding:\"10px\"}}>\r\n               <Button \r\n               variant=\"contained\"\r\n               size=\"medium\" \r\n               onClick={()=>{\r\n                dispatch(addTodo(\r\n                   {\r\n                       id: uuid(),\r\n                       name:name,\r\n                       value:value\r\n                   }    \r\n                      )\r\n            \r\n                )} }\r\n               className={classes.root}>\r\n                Add Row\r\n               </Button>\r\n            </div>\r\n        </div>\r\n        </section>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default TodoInput;","import './App.css';\nimport TodoList from './components/TodoList';\nimport TodoInput from './components/TodoInput';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { useState } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    background: '#212121',\n    border: 0,\n    borderRadius: 3,\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n  },\n});\n\nfunction App() {\n  let [cards,setCards] = useState(false);\n  const classes = useStyles();\n\n  const getComponent=()=> setCards(true);\n  return (\n    <div className=\"App\">\n    <div className=\"container\">\n    <div className=\"row\">\n          <section id=\"home\">\n               <div className=\"col-md-offset-1 col-md-10 col-sm-12\"> \n               <div>\n               <Typography variant=\"h1\" component=\"h2\"  style={{fontWeight:'bold',fontSize:'52px',float:'left',margin:'20px 20px'}} gutterBottom>\n               Hirex.ai\n               </Typography> \n               </div> \n                <br/>     \n               <TodoInput />\n               <div className=\"row\" style={{float:\"left\",margin:'20px 20px'}}>\n               <Button\n               variant=\"contained\"\n               size=\"large\" \n               onClick={getComponent} className={classes.root}>Creat Cards</Button>\n               </div> \n               <div style={{float:\"left\",margin:'70px 20px'}}>\n               { cards ? <TodoList /> : null }\n               </div>           \n               </div>\n          </section>\n    </div>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export let todos=[\r\n   \r\n]","import { createStore } from \"redux\";\r\nimport { reducer } from \"./reducer\";\r\n\r\n\r\nexport let store = createStore(reducer);","import { ADD_TODO,DELETE_TODO,UPDATE_TODO } from \"./actions\";\r\nimport {todos} from './states'\r\n\r\nexport let reducer = (state = todos ,action) =>  {\r\n    let newTodos;\r\n    switch (action.type) {\r\n        case ADD_TODO:\r\n            newTodos = [...state];\r\n            newTodos.push(action.payload);\r\n            return newTodos;\r\n        case DELETE_TODO:\r\n            newTodos = [...state];\r\n            newTodos = newTodos.filter(todo => todo.id != action.payload);\r\n            return newTodos;\r\n        case UPDATE_TODO:  \r\n            newTodos = [...state];\r\n            let index = -1;\r\n            for(let i=0;i< newTodos.length;i++){\r\n                index++;\r\n                if(newTodos[i].id == action.payload.id){\r\n                    break;\r\n                }\r\n                \r\n            }\r\n            if(index != -1){\r\n                newTodos[index] =  action.payload\r\n                return newTodos;\r\n            }\r\n            \r\n    }\r\n    return state;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport {store} from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}